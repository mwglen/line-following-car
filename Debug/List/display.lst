###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          18/Feb/2022  17:29:10
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\display.c
#    Command line  =  
#        -f C:\Users\mwg22\AppData\Local\Temp\EWE905.tmp
#        (C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\display.c -lC
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\List -o
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I
#        ./ --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\List\display.lst
#    Object file   =  
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\Obj\display.r43
#
###############################################################################

C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\display.c
      1          /// Includes
      2          #include "display.h"
      3          #include "primitives.h"
      4          #include <string.h>
      5          
      6          /// Global Variables
      7          //bool DISPLAY_CHANGED = false;
      8          //bool UPDATE_DISPLAY = false;
      9          
     10          /// Functions

   \                                 In  segment CODE, align 2
     11          void display_process(void){
   \                     display_process:
     12            if(update_display){
   \   000000   C293....     CMP.B   #0x0, &update_display
   \   000004   0D24         JEQ     ??display_process_0
     13              update_display = 0;
   \   000006   C243....     MOV.B   #0x0, &update_display
     14              if(display_changed){
   \   00000A   C293....     CMP.B   #0x0, &display_changed
   \   00000E   0824         JEQ     ??display_process_0
     15                display_changed = 0;
   \   000010   C243....     MOV.B   #0x0, &display_changed
     16                Display_Update(0,0,0,0);
   \   000014   4F43         MOV.B   #0x0, R15
   \   000016   4E43         MOV.B   #0x0, R14
   \   000018   4D43         MOV.B   #0x0, R13
   \   00001A   4C43         MOV.B   #0x0, R12
   \   00001C   ........     CALLA   #Display_Update
     17              }
     18            }
     19          }
   \                     ??display_process_0:
   \   000020   1001         RETA

   \                                 In  segment CODE, align 2
     20          void init_display(void) {
   \                     init_display:
     21            strcpy(display_line[0], "          ");
   \   000000   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   000004   3C40....     MOV.W   #display_line, R12
   \   000008   ........     CALLA   #strcpy
     22            strcpy(display_line[1], "  SYSTEM  ");
   \   00000C   3D40....     MOV.W   #`?<Constant "  SYSTEM  ">`, R13
   \   000010   3C40....     MOV.W   #display_line + 11, R12
   \   000014   ........     CALLA   #strcpy
     23            strcpy(display_line[2], " STARTED! ");
   \   000018   3D40....     MOV.W   #`?<Constant " STARTED! ">`, R13
   \   00001C   3C40....     MOV.W   #display_line + 22, R12
   \   000020   ........     CALLA   #strcpy
     24            strcpy(display_line[3], "          ");
   \   000024   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   000028   3C40....     MOV.W   #display_line + 33, R12
   \   00002C   ........     CALLA   #strcpy
     25            display_changed = true;
   \   000030   D243....     MOV.B   #0x1, &display_changed
     26          }
   \   000034   1001         RETA

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "          ">`:
   \   000000   202020202020 DC8 "          "
   \            2020202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  SYSTEM  ">`:
   \   000000   202053595354 DC8 "  SYSTEM  "
   \            454D202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant " STARTED! ">`:
   \   000000   205354415254 DC8 " STARTED! "
   \            4544212000  

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   display_process
        4   -> Display_Update
      4   init_display
        4   -> strcpy


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  ?<Constant "          ">
      11  ?<Constant "  SYSTEM  ">
      11  ?<Constant " STARTED! ">
      34  display_process
      54  init_display

 
 88 bytes in segment CODE
 33 bytes in segment DATA16_C
 
 88 bytes of CODE  memory
 33 bytes of CONST memory

Errors: none
Warnings: none
