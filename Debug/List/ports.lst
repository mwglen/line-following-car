###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          18/Feb/2022  19:17:43
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\ports.c
#    Command line  =  
#        -f C:\Users\mwg22\AppData\Local\Temp\EW49F8.tmp
#        (C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\ports.c -lC
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\List -o
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I
#        ./ --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\List\ports.lst
#    Object file   =  
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\Obj\ports.r43
#
###############################################################################

C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\ports.c
      1          /// Includes
      2          #include "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24a
   \   union <unnamed> _A_PCSEL0_L
   \                     _A_PCSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24c
   \   union <unnamed> _A_PCSEL1_L
   \                     _A_PCSEL1_L:
   \   000000                DS8 2
      3          #include "ports.h"
      4          #include "primitives.h"
      5          
      6          /// Functions
      7          // initialize all pins in all ports

   \                                 In  segment CODE, align 2
      8          void init_ports(void) {
   \                     init_ports:
      9              init_port1();
   \   000000   ........     CALLA   #init_port1
     10              init_port2();
   \   000004   ........     CALLA   #init_port2
     11              init_port3(USE_GPIO);
   \   000008   4C43         MOV.B   #0x0, R12
   \   00000A   ........     CALLA   #init_port3
     12              init_port4();
   \   00000E   ........     CALLA   #init_port4
     13              init_port5();
   \   000012   ........     CALLA   #init_port5
     14              init_port6();
   \   000016   ........     CALLA   #init_port6
     15          }
   \   00001A   1001         RETA
     16          
     17          // initialize all pins in port 1

   \                                 In  segment CODE, align 2
     18          void init_port1(void) {
   \                     init_port1:
     19              P1OUT = RESET_STATE;      // P1 set Low
   \   000000   C2430202     MOV.B   #0x0, &0x202
     20              P1DIR = RESET_STATE;      // Set P1 direction to input
   \   000004   C2430402     MOV.B   #0x0, &0x204
     21          
     22              // P1 PIN 0
     23              P1SEL1 &= ~RED_LED;             // GPIO operation
   \   000008   D2C30C02     BIC.B   #0x1, &0x20c
     24              P1SEL0 &= ~RED_LED;             // GPIO operation
   \   00000C   D2C30A02     BIC.B   #0x1, &0x20a
     25              P1DIR  |=  RED_LED;             // Output
   \   000010   D2D30402     BIS.B   #0x1, &0x204
     26              P1OUT  &= ~RED_LED;             // Off [Low]  ***OFF IS HIGH***
   \   000014   D2C30202     BIC.B   #0x1, &0x202
     27          
     28              // P1 PIN 1
     29              P1SEL1 |=  A1_SEEED;            // ADC Function
   \   000018   E2D30C02     BIS.B   #0x2, &0x20c
     30              P1SEL0 |=  A1_SEEED;            // ADC Function
   \   00001C   E2D30A02     BIS.B   #0x2, &0x20a
     31          
     32              // P1 PIN 2
     33              P1SEL1 |=  V_DETECT_L;          // ADC Function
   \   000020   E2D20C02     BIS.B   #0x4, &0x20c
     34              P1SEL0 |=  V_DETECT_L;          // ADC Function
   \   000024   E2D20A02     BIS.B   #0x4, &0x20a
     35          
     36              // P1 PIN 3
     37              P1SEL1 |=  V_DETECT_R;          // ADC Function
   \   000028   F2D20C02     BIS.B   #0x8, &0x20c
     38              P1SEL0 |=  V_DETECT_R;          // ADC Function
   \   00002C   F2D20A02     BIS.B   #0x8, &0x20a
     39          
     40              // P1 PIN 4
     41              P1SEL1 &= ~SMCLK_2476;          // GPIO operation
   \   000030   F2C010000C02 BIC.B   #0x10, &0x20c
     42              P1SEL0 &= ~SMCLK_2476;          // GPIO operation
   \   000036   F2C010000A02 BIC.B   #0x10, &0x20a
     43              P1DIR  &= ~SMCLK_2476;          // Input
   \   00003C   F2C010000402 BIC.B   #0x10, &0x204
     44          
     45              // P1 PIN 5
     46              P1SEL1 |= V_THUMB;              // ADC Function
   \   000042   F2D020000C02 BIS.B   #0x20, &0x20c
     47              P1SEL0 |= V_THUMB;              // ADC Function
   \   000048   F2D020000A02 BIS.B   #0x20, &0x20a
     48          
     49              // P1 PIN 6
     50              P1SEL1 &= ~UCA0RXD;             // UCA0RXD Function
   \   00004E   F2C040000C02 BIC.B   #0x40, &0x20c
     51              P1SEL0 |=  UCA0RXD;             // UCA0RXD Function
   \   000054   F2D040000A02 BIS.B   #0x40, &0x20a
     52                  
     53              // P1 PIN 7
     54              P1SEL1 &= ~UCA0TXD;             // UCA0TXD Function
   \   00005A   F2C080000C02 BIC.B   #0x80, &0x20c
     55              P1SEL0 |=  UCA0TXD;             // UCA0TXD Function
   \   000060   F2D080000A02 BIS.B   #0x80, &0x20a
     56          }
   \   000066   1001         RETA
   \   000068                REQUIRE _A_PAOUT_L
   \   000068                REQUIRE _A_PADIR_L
   \   000068                REQUIRE _A_PASEL1_L
   \   000068                REQUIRE _A_PASEL0_L
     57          
     58          // initialize all pins in port 2

   \                                 In  segment CODE, align 2
     59          void init_port2(void) {
   \                     init_port2:
     60              P2OUT = RESET_STATE;            // P2 set Low
   \   000000   C2430302     MOV.B   #0x0, &0x203
     61              P2DIR = RESET_STATE;            // Set P2 direction to input
   \   000004   C2430502     MOV.B   #0x0, &0x205
     62          
     63              // P2 PIN 0
     64              P2SEL1 &= ~RESET_LCD;           // GPIO operation
   \   000008   D2C30D02     BIC.B   #0x1, &0x20d
     65              P2SEL0 &= ~RESET_LCD;           // GPIO operation
   \   00000C   D2C30B02     BIC.B   #0x1, &0x20b
     66              P2DIR |= RESET_LCD;             // Output
   \   000010   D2D30502     BIS.B   #0x1, &0x205
     67              P2OUT &= ~RESET_LCD;            // Off [Low]
   \   000014   D2C30302     BIC.B   #0x1, &0x203
     68          
     69              // P2 PIN 1
     70              P2SEL1 &= ~L_REVERSE_2476;      // GPIO operation
   \   000018   E2C30D02     BIC.B   #0x2, &0x20d
     71              P2SEL0 &= ~L_REVERSE_2476;      // GPIO operation
   \   00001C   E2C30B02     BIC.B   #0x2, &0x20b
     72              P2DIR  &= ~L_REVERSE_2476;      // Input
   \   000020   E2C30502     BIC.B   #0x2, &0x205
     73          
     74              // P2 PIN 2
     75              P2SEL1 &= ~P2_2;                // GPIO operation
   \   000024   E2C20D02     BIC.B   #0x4, &0x20d
     76              P2SEL0 &= ~P2_2;                // GPIO operation
   \   000028   E2C20B02     BIC.B   #0x4, &0x20b
     77              P2DIR  &= ~P2_2;                // Input
   \   00002C   E2C20502     BIC.B   #0x4, &0x205
     78          
     79              // P2 PIN 3
     80              P2SEL1 &= ~SW2;                 // GPIO Operation
   \   000030   F2C20D02     BIC.B   #0x8, &0x20d
     81              P2SEL0 &= ~SW2;                 // GPIO Operation
   \   000034   F2C20B02     BIC.B   #0x8, &0x20b
     82              P2OUT  |=  SW2;                 // Configure pullup resistor
   \   000038   F2D20302     BIS.B   #0x8, &0x203
     83              P2DIR  &= ~SW2;                 // Input
   \   00003C   F2C20502     BIC.B   #0x8, &0x205
     84              P2REN  |=  SW2;                 // Enable pullup resistor
   \   000040   F2D20702     BIS.B   #0x8, &0x207
     85              //P2IES |=  SW2;                  // P2.0 Hi/Lo edge interrupt
     86              //P2IFG &= ~SW2;                  // Clear all P2.6 interrupt flags
     87              //P2IE  |=  SW2;                  // P2.6 interrupt enabled
     88          
     89              // P2 PIN 4
     90              P2SEL1 &= ~IOT_RUN_CPU;         // GPIO operation
   \   000044   F2C010000D02 BIC.B   #0x10, &0x20d
     91              P2SEL0 &= ~IOT_RUN_CPU;         // GPIO operation
   \   00004A   F2C010000B02 BIC.B   #0x10, &0x20b
     92              P2DIR  |=  IOT_RUN_CPU;         // Input
   \   000050   F2D010000502 BIS.B   #0x10, &0x205
     93              P2OUT  &= ~IOT_RUN_CPU;         // Off [Low]
   \   000056   F2C010000302 BIC.B   #0x10, &0x203
     94          
     95              // P2 PIN 5
     96              P2SEL1 &= ~DAC_ENB;             // GPIO operation
   \   00005C   F2C020000D02 BIC.B   #0x20, &0x20d
     97              P2SEL0 &= ~DAC_ENB;             // GPIO operation
   \   000062   F2C020000B02 BIC.B   #0x20, &0x20b
     98              P2DIR  |=  DAC_ENB;             // Output
   \   000068   F2D020000502 BIS.B   #0x20, &0x205
     99              P2OUT  |=  DAC_ENB;             // On [High]
   \   00006E   F2D020000302 BIS.B   #0x20, &0x203
    100          
    101              // P2 PIN 6
    102              P2SEL1 |=  LFXOUT;              // Clock operation
   \   000074   F2D040000D02 BIS.B   #0x40, &0x20d
    103              P2SEL0 &= ~LFXOUT;              // Clock operation
   \   00007A   F2C040000B02 BIC.B   #0x40, &0x20b
    104          
    105              // P2 PIN 7
    106              P2SEL1 |=  LFXIN;               // Clock operation
   \   000080   F2D080000D02 BIS.B   #0x80, &0x20d
    107              P2SEL0 &= ~LFXIN;               // Clock operation
   \   000086   F2C080000B02 BIC.B   #0x80, &0x20b
    108          }
   \   00008C   1001         RETA
   \   00008E                REQUIRE _A_PAOUT_L
   \   00008E                REQUIRE _A_PADIR_L
   \   00008E                REQUIRE _A_PASEL1_L
   \   00008E                REQUIRE _A_PASEL0_L
   \   00008E                REQUIRE _A_PAREN_L
    109          
    110          // initiailize all pins in port 3

   \                                 In  segment CODE, align 2
    111          void init_port3(char smclk) {
   \                     init_port3:
    112              P3OUT = RESET_STATE;            // P3 set Low
   \   000000   C2432202     MOV.B   #0x0, &0x222
    113              P3DIR = RESET_STATE;            // Set P3 direction to input
   \   000004   C2432402     MOV.B   #0x0, &0x224
    114              
    115              // P3 PIN 0
    116              P3SEL1 &= ~TEST_PROBE;          // GPIO operation
   \   000008   D2C32C02     BIC.B   #0x1, &0x22c
    117              P3SEL0 &= ~TEST_PROBE;          // GPIO operation
   \   00000C   D2C32A02     BIC.B   #0x1, &0x22a
    118              P3DIR  |=  TEST_PROBE;          // Output
   \   000010   D2D32402     BIS.B   #0x1, &0x224
    119              P3OUT  &= ~TEST_PROBE;          // Off [Low]
   \   000014   D2C32202     BIC.B   #0x1, &0x222
    120          
    121              // P3 PIN 1
    122              P3SEL1 &= ~DAC_CNTL1;           // GPIO operation
   \   000018   E2C32C02     BIC.B   #0x2, &0x22c
    123              P3SEL0 &= ~DAC_CNTL1;           // GPIO operation
   \   00001C   E2C32A02     BIC.B   #0x2, &0x22a
    124              P3DIR  |=  DAC_CNTL1;           // Output
   \   000020   E2D32402     BIS.B   #0x2, &0x224
    125              P3OUT  &= ~DAC_CNTL1;           // Off [Low]
   \   000024   E2C32202     BIC.B   #0x2, &0x222
    126          
    127              // P3 PIN 2
    128              P3SEL1 |=  OA2N;                // SMCLK operation
   \   000028   E2D22C02     BIS.B   #0x4, &0x22c
    129              P3SEL0 |=  OA2N;                // SMCLK operation
   \   00002C   E2D22A02     BIS.B   #0x4, &0x22a
    130          
    131              // P3 PIN 3
    132              P3SEL1 &= ~LCD_BACKLITE;        // GPIO operation
   \   000030   F2C22C02     BIC.B   #0x8, &0x22c
    133              P3SEL0 &= ~LCD_BACKLITE;        // GPIO operation
   \   000034   F2C22A02     BIC.B   #0x8, &0x22a
    134              P3DIR  |=  LCD_BACKLITE;        // Output
   \   000038   F2D22402     BIS.B   #0x8, &0x224
    135              P3OUT  |=  LCD_BACKLITE;        // On [High]
   \   00003C   F2D22202     BIS.B   #0x8, &0x222
    136          
    137              // P3 PIN 4
    138              switch (smclk) {
   \   000040   4E4C         MOV.B   R12, R14
   \   000042   4E83         SUB.B   #0x0, R14
   \   000044   0C24         JEQ     ??init_port3_2
   \   000046   5E83         SUB.B   #0x1, R14
   \   000048   1320         JNE     ??init_port3_1
    139                case USE_SMCLK:
    140                  P3SEL1 &= ~SMCLK_2355;          // SMCLK operation
   \   00004A   F2C010002C02 BIC.B   #0x10, &0x22c
    141                  P3SEL0 |=  SMCLK_2355;          // SMCLK operation
   \   000050   F2D010002A02 BIS.B   #0x10, &0x22a
    142                  P3DIR  |=  SMCLK_2355;          // Direction must be High
   \   000056   F2D010002402 BIS.B   #0x10, &0x224
    143                  break;
   \   00005C   093C         JMP     ??init_port3_1
    144                case USE_GPIO:
    145                  P3SEL1 &= ~SMCLK_2355;          // GPIO operation
   \                     ??init_port3_2:
   \   00005E   F2C010002C02 BIC.B   #0x10, &0x22c
    146                  P3SEL0 &= ~SMCLK_2355;          // GPIO operation
   \   000064   F2C010002A02 BIC.B   #0x10, &0x22a
    147                  P3DIR  &= ~SMCLK_2355;          // Direction in
   \   00006A   F2C010002402 BIC.B   #0x10, &0x224
    148                  break;
    149              }
    150              
    151              // P3 PIN 5
    152              P3SEL1 &= ~DAC_CNTL;            // GPIO operation
   \                     ??init_port3_1:
   \   000070   F2C020002C02 BIC.B   #0x20, &0x22c
    153              P3SEL0 &= ~DAC_CNTL;            // GPIO operation
   \   000076   F2C020002A02 BIC.B   #0x20, &0x22a
    154              P3DIR  |=  DAC_CNTL;            // Output
   \   00007C   F2D020002402 BIS.B   #0x20, &0x224
    155              P3OUT  &= ~DAC_CNTL;            // Off [Low]
   \   000082   F2C020002202 BIC.B   #0x20, &0x222
    156          
    157              // P3 PIN 6
    158              P3SEL1 &= ~IOT_LINK_CPU;        // GPIO operation
   \   000088   F2C040002C02 BIC.B   #0x40, &0x22c
    159              P3SEL0 &= ~IOT_LINK_CPU;        // GPIO operation
   \   00008E   F2C040002A02 BIC.B   #0x40, &0x22a
    160              P3DIR  &= ~IOT_LINK_CPU;        // Input
   \   000094   F2C040002402 BIC.B   #0x40, &0x224
    161          
    162              // P3 PIN 7
    163              P3SEL1 &= ~IOT_EN_CPU;          // GPIO opertaion
   \   00009A   F2C080002C02 BIC.B   #0x80, &0x22c
    164              P3SEL0 &= ~IOT_EN_CPU;          // GPIO operation
   \   0000A0   F2C080002A02 BIC.B   #0x80, &0x22a
    165              P3DIR  |=  IOT_EN_CPU;          // Output
   \   0000A6   F2D080002402 BIS.B   #0x80, &0x224
    166              P3OUT  &= ~IOT_EN_CPU;          // Off [Low]
   \   0000AC   F2C080002202 BIC.B   #0x80, &0x222
    167          }
   \   0000B2   1001         RETA
   \   0000B4                REQUIRE _A_PBOUT_L
   \   0000B4                REQUIRE _A_PBDIR_L
   \   0000B4                REQUIRE _A_PBSEL1_L
   \   0000B4                REQUIRE _A_PBSEL0_L
    168          
    169          // initialize all pins in port 4

   \                                 In  segment CODE, align 2
    170          void init_port4(void) {
   \                     init_port4:
    171              P4OUT = RESET_STATE;            // P4 set Low
   \   000000   C2432302     MOV.B   #0x0, &0x223
    172              P4DIR = RESET_STATE;            // Output
   \   000004   C2432502     MOV.B   #0x0, &0x225
    173          
    174              // P4 PIN 0
    175              P4SEL1 &= ~P4_0;                // GPIO operation
   \   000008   D2C32D02     BIC.B   #0x1, &0x22d
    176              P4SEL0 &= ~P4_0;                // GPIO operation
   \   00000C   D2C32B02     BIC.B   #0x1, &0x22b
    177              P4DIR  &= ~P4_0;                // Input
   \   000010   D2C32502     BIC.B   #0x1, &0x225
    178              
    179              // P4 PIN 1
    180              P4SEL1 &= ~SW1;                 // GPIO operation
   \   000014   E2C32D02     BIC.B   #0x2, &0x22d
    181              P4SEL0 &= ~SW1;                 // GPIO operation
   \   000018   E2C32B02     BIC.B   #0x2, &0x22b
    182              P4OUT  |=  SW1;                 // Configure pullup resistor
   \   00001C   E2D32302     BIS.B   #0x2, &0x223
    183              P4DIR  &= ~SW1;                 // Input
   \   000020   E2C32502     BIC.B   #0x2, &0x225
    184              // Pull Up Resistor
    185              //P4PUD  |=  SW1;                 // Configure pull-up resistor
    186              P4REN  |=  SW1;                 // Enable pullup resistor
   \   000024   E2D32702     BIS.B   #0x2, &0x227
    187              // Enable Interrupts
    188              //P4IFG  &= ~SW1;                 // Clear all P2.6 interrupt flags
    189              //P4IES  |=  SW1;                 // P4.2 Hi/Lo edge interrupt
    190              //P4IE   |=  SW1;                 // P4.2 interrupt enabled
    191              
    192              // P4 PIN 2
    193              P4SEL1 &= ~UCA1TXD;             // UART operation
   \   000028   F2C22D02     BIC.B   #0x8, &0x22d
    194              P4SEL0 |=  UCA1TXD;             // UART operation
   \   00002C   F2D22B02     BIS.B   #0x8, &0x22b
    195              
    196              // P4 PIN 3
    197              P4SEL1 &= ~UCA1RXD;             // UART operation
   \   000030   E2C22D02     BIC.B   #0x4, &0x22d
    198              P4SEL0 |=  UCA1RXD;             // UART operation
   \   000034   E2D22B02     BIS.B   #0x4, &0x22b
    199              
    200              // P4 PIN 4
    201              P4SEL1 &= ~UCB1_CS_LCD;         // GPIO operation
   \   000038   F2C010002D02 BIC.B   #0x10, &0x22d
    202              P4SEL0 &= ~UCB1_CS_LCD;         // GPIO operation
   \   00003E   F2C010002B02 BIC.B   #0x10, &0x22b
    203              P4DIR  |=  UCB1_CS_LCD;         // Output
   \   000044   F2D010002502 BIS.B   #0x10, &0x225
    204              P4OUT  |=  UCB1_CS_LCD;         // Off [High]
   \   00004A   F2D010002302 BIS.B   #0x10, &0x223
    205              
    206              // P4 PIN 5
    207              P4SEL1 &= ~UCB1CLK;             // UCB1CLK SPI BUS operation
   \   000050   F2C020002D02 BIC.B   #0x20, &0x22d
    208              P4SEL0 |=  UCB1CLK;             // UCB1CLK SPI BUS operation
   \   000056   F2D020002B02 BIS.B   #0x20, &0x22b
    209              
    210              // P4 PIN 6
    211              P4SEL1 &= ~UCB1SIMO;            // UCB1SIMO SPI BUS operation
   \   00005C   F2C040002D02 BIC.B   #0x40, &0x22d
    212              P4SEL0 |=  UCB1SIMO;            // UCB1SIMO SPI BUS operation
   \   000062   F2D040002B02 BIS.B   #0x40, &0x22b
    213              
    214              // P4 PIN 7
    215              P4SEL1 &= ~UCB1SOMI;            // UCB1SOMI SPI BUS operation
   \   000068   F2C080002D02 BIC.B   #0x80, &0x22d
    216              P4SEL0 |=  UCB1SOMI;            // UCB1SOMI SPI BUS operation
   \   00006E   F2D080002B02 BIS.B   #0x80, &0x22b
    217          }
   \   000074   1001         RETA
   \   000076                REQUIRE _A_PBOUT_L
   \   000076                REQUIRE _A_PBDIR_L
   \   000076                REQUIRE _A_PBSEL1_L
   \   000076                REQUIRE _A_PBSEL0_L
   \   000076                REQUIRE _A_PBREN_L
    218          
    219          // initialize all pins in port 5

   \                                 In  segment CODE, align 2
    220          void init_port5(void) {
   \                     init_port5:
    221              P5OUT = RESET_STATE;            // P4 set Low
   \   000000   C2434202     MOV.B   #0x0, &0x242
    222              P5DIR = RESET_STATE;            // Set P4 direction to output
   \   000004   C2434402     MOV.B   #0x0, &0x244
    223          
    224              // P5 PIN 0
    225              P5SEL1 |= CHECK_BAT;            // Analog Function
   \   000008   D2D34C02     BIS.B   #0x1, &0x24c
    226              P5SEL0 |= CHECK_BAT;            // Analog Function
   \   00000C   D2D34A02     BIS.B   #0x1, &0x24a
    227              
    228              // P5 PIN 1
    229              P5SEL1 |= V_BAT;                // Analog Function
   \   000010   E2D34C02     BIS.B   #0x2, &0x24c
    230              P5SEL0 |= V_BAT;                // Analog Function
   \   000014   E2D34A02     BIS.B   #0x2, &0x24a
    231              
    232              // P5 PIN 2
    233              P5SEL1 |=  V_DAC;               // Analog Function
   \   000018   E2D24C02     BIS.B   #0x4, &0x24c
    234              P5SEL0 |=  V_DAC;               // Analog Function
   \   00001C   E2D24A02     BIS.B   #0x4, &0x24a
    235              
    236              // P5 PIN 3
    237              P5SEL1 |=  V_3_3;               // Analog Function
   \   000020   F2D24C02     BIS.B   #0x8, &0x24c
    238              P5SEL0 |=  V_3_3;               // Analog Function
   \   000024   F2D24A02     BIS.B   #0x8, &0x24a
    239              
    240              // P5 PIN 4
    241              P5SEL1 &= ~IOT_BOOT_CPU;        // GPIO operation
   \   000028   F2C010004C02 BIC.B   #0x10, &0x24c
    242              P5SEL0 &= ~IOT_BOOT_CPU;        // GPIO operation
   \   00002E   F2C010004A02 BIC.B   #0x10, &0x24a
    243              P6DIR  |=  IOT_BOOT_CPU;        // Output
   \   000034   F2D010004502 BIS.B   #0x10, &0x245
    244              P4OUT  &= ~IOT_BOOT_CPU;        // Off [Low]
   \   00003A   F2C010002302 BIC.B   #0x10, &0x223
    245          }
   \   000040   1001         RETA
   \   000042                REQUIRE _A_PCOUT_L
   \   000042                REQUIRE _A_PCDIR_L
   \   000042                REQUIRE _A_PCSEL1_L
   \   000042                REQUIRE _A_PCSEL0_L
   \   000042                REQUIRE _A_PBOUT_L
    246          
    247          // initialize all pins in port 6

   \                                 In  segment CODE, align 2
    248          void init_port6(void) {
   \                     init_port6:
    249              P6OUT = RESET_STATE;            // P4 set Low
   \   000000   C2434302     MOV.B   #0x0, &0x243
    250              P6DIR = RESET_STATE;            // Set P4 direction to output
   \   000004   C2434502     MOV.B   #0x0, &0x245
    251              
    252              // P6 PIN 0
    253              P6SEL1 &= ~R_FORWARD;           // GPIO operation
   \   000008   D2C34D02     BIC.B   #0x1, &0x24d
    254              P6SEL0 &= ~R_FORWARD;           // GPIO operation
   \   00000C   D2C34B02     BIC.B   #0x1, &0x24b
    255              P6DIR  |=  R_FORWARD;           // Output
   \   000010   D2D34502     BIS.B   #0x1, &0x245
    256              P6OUT  &= ~R_FORWARD;           // Off [Low]
   \   000014   D2C34302     BIC.B   #0x1, &0x243
    257              
    258              // P6 PIN 1
    259              P6SEL1 &= ~L_FORWARD;           // GPIO operation
   \   000018   E2C34D02     BIC.B   #0x2, &0x24d
    260              P6SEL0 &= ~L_FORWARD;           // GPIO operation
   \   00001C   E2C34B02     BIC.B   #0x2, &0x24b
    261              P6DIR  |=  L_FORWARD;           // Output
   \   000020   E2D34502     BIS.B   #0x2, &0x245
    262              P6OUT  &= ~L_FORWARD;           // Off [Low]
   \   000024   E2C34302     BIC.B   #0x2, &0x243
    263          
    264              // P6 PIN 2
    265              P6SEL1 &= ~R_REVERSE;           // GPIO operation
   \   000028   E2C24D02     BIC.B   #0x4, &0x24d
    266              P6SEL0 &= ~R_REVERSE;           // GPIO operation
   \   00002C   E2C24B02     BIC.B   #0x4, &0x24b
    267              P6DIR  |=  R_REVERSE;           // Output
   \   000030   E2D24502     BIS.B   #0x4, &0x245
    268              P6OUT  &= ~R_REVERSE;           // Off [Low]
   \   000034   E2C24302     BIC.B   #0x4, &0x243
    269              
    270              // P6 PIN 3
    271              P6SEL1 &= ~L_REVERSE;      // GPIO operation
   \   000038   F2C24D02     BIC.B   #0x8, &0x24d
    272              P6SEL0 &= ~L_REVERSE;      // GPIO operation
   \   00003C   F2C24B02     BIC.B   #0x8, &0x24b
    273              P6DIR  |=  L_REVERSE;      // Output
   \   000040   F2D24502     BIS.B   #0x8, &0x245
    274              P6OUT  &= ~L_REVERSE;      // Off [Low]
   \   000044   F2C24302     BIC.B   #0x8, &0x243
    275              
    276              // P6 PIN 4
    277              P6SEL1 &= ~IR_SENSOR;           // GPIO operation
   \   000048   F2C010004D02 BIC.B   #0x10, &0x24d
    278              P6SEL0 &= ~IR_SENSOR;           // GPIO operation
   \   00004E   F2C010004B02 BIC.B   #0x10, &0x24b
    279              P6DIR  |=  R_REVERSE;           // Input
   \   000054   E2D24502     BIS.B   #0x4, &0x245
    280              
    281              // P6 PIN 5
    282              P6SEL1 &= ~P6_5;                // GPIO operation
   \   000058   F2C020004D02 BIC.B   #0x20, &0x24d
    283              P6SEL0 &= ~P6_5;                // GPIO operation
   \   00005E   F2C020004B02 BIC.B   #0x20, &0x24b
    284              P6DIR  |=  P6_5;                // Input
   \   000064   F2D020004502 BIS.B   #0x20, &0x245
    285              
    286              // P6 PIN 6
    287              P6SEL1 &= ~GRN_LED;             // GPIO operation
   \   00006A   F2C040004D02 BIC.B   #0x40, &0x24d
    288              P6SEL0 &= ~GRN_LED;             // GPIO operation
   \   000070   F2C040004B02 BIC.B   #0x40, &0x24b
    289              P6DIR  |=  GRN_LED;             // Output
   \   000076   F2D040004502 BIS.B   #0x40, &0x245
    290              P6OUT  |=  GRN_LED;             // Off [High]
   \   00007C   F2D040004302 BIS.B   #0x40, &0x243
    291          }
   \   000082   1001         RETA
   \   000084                REQUIRE _A_PCOUT_L
   \   000084                REQUIRE _A_PCDIR_L
   \   000084                REQUIRE _A_PCSEL1_L
   \   000084                REQUIRE _A_PCSEL0_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   init_port1
      4   init_port2
      4   init_port3
      4   init_port4
      4   init_port5
      4   init_port6
      4   init_ports
        4   -> init_port1
        4   -> init_port2
        4   -> init_port3
        4   -> init_port4
        4   -> init_port5
        4   -> init_port6


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PCDIR_L
       2  _A_PCOUT_L
       2  _A_PCSEL0_L
       2  _A_PCSEL1_L
     104  init_port1
     142  init_port2
     180  init_port3
     118  init_port4
      66  init_port5
     132  init_port6
      28  init_ports

 
 770 bytes in segment CODE
  28 bytes in segment DATA16_AN
 
 770 bytes of CODE memory
   0 bytes of DATA memory (+ 28 bytes shared)

Errors: none
Warnings: none
