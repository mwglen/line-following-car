###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          07/Feb/2022  11:00:40
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\ports.c
#    Command line  =  
#        -f C:\Users\mwg22\AppData\Local\Temp\EWEAD6.tmp
#        (C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\ports.c -lC
#        C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\Debug\List -o
#        C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.5_2\430\lib\dlib\dl430xlsfn.h"
#        -I ./ --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\Debug\List\ports.lst
#    Object file   =  
#        C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\Debug\Obj\ports.r43
#
###############################################################################

C:\Users\mwg22\Desktop\ECE-306_Code\Homework_03\ports.c
      1          //------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains functions to initialize ports
      4          //
      5          //  Matthew Glen
      6          //  Feb 2022
      7          //  Built with IAR Embedded Workbench Version: (7.21.1)
      8          //------------------------------------------------------------------------------
      9          
     10          #include "macros.h"
     11          #include "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24a
   \   union <unnamed> _A_PCSEL0_L
   \                     _A_PCSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24c
   \   union <unnamed> _A_PCSEL1_L
   \                     _A_PCSEL1_L:
   \   000000                DS8 2
     12          #include "functions.h"
     13          
     14          //------------------------------------------------------------------------------
     15          //
     16          // Description: This calls the rest of the initialization functions
     17          //
     18          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     19          void Init_Ports(void) {
   \                     Init_Ports:
     20              Init_Port1();
   \   000000   ........     CALLA   #Init_Port1
     21              Init_Port2();
   \   000004   ........     CALLA   #Init_Port2
     22              Init_Port3('a');
   \   000008   7C406100     MOV.B   #0x61, R12
   \   00000C   ........     CALLA   #Init_Port3
     23              Init_Port4();
   \   000010   ........     CALLA   #Init_Port4
     24              Init_Port5();
   \   000014   ........     CALLA   #Init_Port5
     25              Init_Port6();
   \   000018   ........     CALLA   #Init_Port6
     26          }
   \   00001C   1001         RETA
     27          
     28          //------------------------------------------------------------------------------
     29          //
     30          // Description: This function will initialize all pins in port 1
     31          //
     32          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     33          void Init_Port1(void) {
   \                     Init_Port1:
     34              P1OUT = RESET_STATE;      // P1 set Low
   \   000000   C2430202     MOV.B   #0x0, &0x202
     35              P1DIR = RESET_STATE;      // Set P1 direction to input
   \   000004   C2430402     MOV.B   #0x0, &0x204
     36          
     37              // P1 PIN 0
     38              P1SEL1 &= ~RED_LED;             // GPIO operation
   \   000008   D2C30C02     BIC.B   #0x1, &0x20c
     39              P1SEL0 &= ~RED_LED;             // GPIO operation
   \   00000C   D2C30A02     BIC.B   #0x1, &0x20a
     40              P1DIR  |=  RED_LED;             // Output
   \   000010   D2D30402     BIS.B   #0x1, &0x204
     41              P1OUT  &= ~RED_LED;             // Off [Low]  ***OFF IS HIGH***
   \   000014   D2C30202     BIC.B   #0x1, &0x202
     42          
     43              // P1 PIN 1
     44              P1SEL1 |=  A1_SEEED;            // ADC Function
   \   000018   E2D30C02     BIS.B   #0x2, &0x20c
     45              P1SEL0 |=  A1_SEEED;            // ADC Function
   \   00001C   E2D30A02     BIS.B   #0x2, &0x20a
     46          
     47              // P1 PIN 2
     48              P1SEL1 |=  V_DETECT_L;          // ADC Function
   \   000020   E2D20C02     BIS.B   #0x4, &0x20c
     49              P1SEL0 |=  V_DETECT_L;          // ADC Function
   \   000024   E2D20A02     BIS.B   #0x4, &0x20a
     50          
     51              // P1 PIN 3
     52              P1SEL1 |=  V_DETECT_R;          // ADC Function
   \   000028   F2D20C02     BIS.B   #0x8, &0x20c
     53              P1SEL0 |=  V_DETECT_R;          // ADC Function
   \   00002C   F2D20A02     BIS.B   #0x8, &0x20a
     54          
     55              // P1 PIN 4
     56              P1SEL1 &= ~SMCLK_2476;          // GPIO operation
   \   000030   F2C010000C02 BIC.B   #0x10, &0x20c
     57              P1SEL0 &= ~SMCLK_2476;          // GPIO operation
   \   000036   F2C010000A02 BIC.B   #0x10, &0x20a
     58              P1DIR  &= ~SMCLK_2476;          // Input
   \   00003C   F2C010000402 BIC.B   #0x10, &0x204
     59          
     60              // P1 PIN 5
     61              P1SEL1 |= V_THUMB;              // ADC Function
   \   000042   F2D020000C02 BIS.B   #0x20, &0x20c
     62              P1SEL0 |= V_THUMB;              // ADC Function
   \   000048   F2D020000A02 BIS.B   #0x20, &0x20a
     63          
     64              // P1 PIN 6
     65              P1SEL1 &= ~UCA0RXD;             // UCA0RXD Function
   \   00004E   F2C040000C02 BIC.B   #0x40, &0x20c
     66              P1SEL0 |=  UCA0RXD;             // UCA0RXD Function
   \   000054   F2D040000A02 BIS.B   #0x40, &0x20a
     67                  
     68              // P1 PIN 7
     69              P1SEL1 &= ~UCA0TXD;             // UCA0TXD Function
   \   00005A   F2C080000C02 BIC.B   #0x80, &0x20c
     70              P1SEL0 |=  UCA0TXD;             // UCA0TXD Function
   \   000060   F2D080000A02 BIS.B   #0x80, &0x20a
     71          }
   \   000066   1001         RETA
   \   000068                REQUIRE _A_PAOUT_L
   \   000068                REQUIRE _A_PADIR_L
   \   000068                REQUIRE _A_PASEL1_L
   \   000068                REQUIRE _A_PASEL0_L
     72          
     73          //------------------------------------------------------------------------------
     74          //
     75          // Description: This function will initialize all pins in port 2
     76          //
     77          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
     78          void Init_Port2(void) {
   \                     Init_Port2:
     79              P2OUT = RESET_STATE;            // P2 set Low
   \   000000   C2430302     MOV.B   #0x0, &0x203
     80              P2DIR = RESET_STATE;            // Set P2 direction to input
   \   000004   C2430502     MOV.B   #0x0, &0x205
     81          
     82              // P3 PIN 0
     83              P2SEL1 &= ~RESET_LCD;           // GPIO operation
   \   000008   D2C30D02     BIC.B   #0x1, &0x20d
     84              P2SEL0 &= ~RESET_LCD;           // GPIO operation
   \   00000C   D2C30B02     BIC.B   #0x1, &0x20b
     85              P2DIR |= RESET_LCD;             // Output
   \   000010   D2D30502     BIS.B   #0x1, &0x205
     86              P2OUT &= ~RESET_LCD;            // Off [Low]
   \   000014   D2C30302     BIC.B   #0x1, &0x203
     87          
     88              // P3 PIN 1
     89              P2SEL1 &= ~L_REVERSE_2476;      // GPIO operation
   \   000018   E2C30D02     BIC.B   #0x2, &0x20d
     90              P2SEL0 &= ~L_REVERSE_2476;      // GPIO operation
   \   00001C   E2C30B02     BIC.B   #0x2, &0x20b
     91              P2DIR  &= ~L_REVERSE_2476;      // Input
   \   000020   E2C30502     BIC.B   #0x2, &0x205
     92          
     93              // P3 PIN 2
     94              P2SEL1 &= ~P2_2;                // GPIO operation
   \   000024   E2C20D02     BIC.B   #0x4, &0x20d
     95              P2SEL0 &= ~P2_2;                // GPIO operation
   \   000028   E2C20B02     BIC.B   #0x4, &0x20b
     96              P2DIR  &= ~P2_2;                // Input
   \   00002C   E2C20502     BIC.B   #0x4, &0x205
     97          
     98              // P3 PIN 3
     99              P2SEL1 &= ~SW2;                 // GPIO Operation
   \   000030   F2C20D02     BIC.B   #0x8, &0x20d
    100              P2SEL0 &= ~SW2;                 // GPIO Operation
   \   000034   F2C20B02     BIC.B   #0x8, &0x20b
    101              P2OUT  |=  SW2;                 // Configure pullup resistor
   \   000038   F2D20302     BIS.B   #0x8, &0x203
    102              P2DIR  &= ~SW2;                 // Input
   \   00003C   F2C20502     BIC.B   #0x8, &0x205
    103              P2REN  |=  SW2;                 // Enable pullup resistor
   \   000040   F2D20702     BIS.B   #0x8, &0x207
    104              //P2IES |=  SW2;                  // P2.0 Hi/Lo edge interrupt
    105              //P2IFG &= ~SW2;                  // Clear all P2.6 interrupt flags
    106              //P2IE  |=  SW2;                  // P2.6 interrupt enabled
    107          
    108              // P3 PIN 4
    109              P2SEL1 &= ~IOT_RUN_CPU;         // GPIO operation
   \   000044   F2C010000D02 BIC.B   #0x10, &0x20d
    110              P2SEL0 &= ~IOT_RUN_CPU;         // GPIO operation
   \   00004A   F2C010000B02 BIC.B   #0x10, &0x20b
    111              P2DIR  |=  IOT_RUN_CPU;         // Input
   \   000050   F2D010000502 BIS.B   #0x10, &0x205
    112              P2OUT  &= ~IOT_RUN_CPU;         // Off [Low]
   \   000056   F2C010000302 BIC.B   #0x10, &0x203
    113          
    114              // P3 PIN 5
    115              P2SEL1 &= ~DAC_ENB;             // GPIO operation
   \   00005C   F2C020000D02 BIC.B   #0x20, &0x20d
    116              P2SEL0 &= ~DAC_ENB;             // GPIO operation
   \   000062   F2C020000B02 BIC.B   #0x20, &0x20b
    117              P2DIR  |=  DAC_ENB;             // Output
   \   000068   F2D020000502 BIS.B   #0x20, &0x205
    118              P2OUT  |=  DAC_ENB;             // On [High]
   \   00006E   F2D020000302 BIS.B   #0x20, &0x203
    119          
    120              // P3 PIN 6
    121              P2SEL1 |=  LFXOUT;              // Clock operation
   \   000074   F2D040000D02 BIS.B   #0x40, &0x20d
    122              P2SEL0 &= ~LFXOUT;              // Clock operation
   \   00007A   F2C040000B02 BIC.B   #0x40, &0x20b
    123          
    124              // P3 PIN 7
    125              P2SEL1 |=  LFXIN;               // Clock operation
   \   000080   F2D080000D02 BIS.B   #0x80, &0x20d
    126              P2SEL0 &= ~LFXIN;               // Clock operation
   \   000086   F2C080000B02 BIC.B   #0x80, &0x20b
    127          }
   \   00008C   1001         RETA
   \   00008E                REQUIRE _A_PAOUT_L
   \   00008E                REQUIRE _A_PADIR_L
   \   00008E                REQUIRE _A_PASEL1_L
   \   00008E                REQUIRE _A_PASEL0_L
   \   00008E                REQUIRE _A_PAREN_L
    128          
    129          //------------------------------------------------------------------------------
    130          //
    131          // Description: This function will initialize all pins in port 3
    132          //
    133          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    134          void Init_Port3(char msclk) {
   \                     Init_Port3:
    135              P3OUT = RESET_STATE;            // P3 set Low
   \   000000   C2432202     MOV.B   #0x0, &0x222
    136              P3DIR = RESET_STATE;            // Set P3 direction to input
   \   000004   C2432402     MOV.B   #0x0, &0x224
    137              
    138              // P3 PIN 0
    139              P3SEL1 &= ~TEST_PROBE;          // GPIO operation
   \   000008   D2C32C02     BIC.B   #0x1, &0x22c
    140              P3SEL0 &= ~TEST_PROBE;          // GPIO operation
   \   00000C   D2C32A02     BIC.B   #0x1, &0x22a
    141              P3DIR  |=  TEST_PROBE;          // Output
   \   000010   D2D32402     BIS.B   #0x1, &0x224
    142              P3OUT  &= ~TEST_PROBE;          // Off [Low]
   \   000014   D2C32202     BIC.B   #0x1, &0x222
    143          
    144              // P3 PIN 1
    145              P3SEL1 &= ~DAC_CNTL1;           // GPIO operation
   \   000018   E2C32C02     BIC.B   #0x2, &0x22c
    146              P3SEL0 &= ~DAC_CNTL1;           // GPIO operation
   \   00001C   E2C32A02     BIC.B   #0x2, &0x22a
    147              P3DIR  |=  DAC_CNTL1;           // Output
   \   000020   E2D32402     BIS.B   #0x2, &0x224
    148              P3OUT  &= ~DAC_CNTL1;           // Off [Low]
   \   000024   E2C32202     BIC.B   #0x2, &0x222
    149          
    150              // P3 PIN 2
    151              P3SEL1 |=  OA2N;                // SMCLK operation
   \   000028   E2D22C02     BIS.B   #0x4, &0x22c
    152              P3SEL0 |=  OA2N;                // SMCLK operation
   \   00002C   E2D22A02     BIS.B   #0x4, &0x22a
    153          
    154              // P3 PIN 3
    155              P3SEL1 &= ~LCD_BACKLITE;        // GPIO operation
   \   000030   F2C22C02     BIC.B   #0x8, &0x22c
    156              P3SEL0 &= ~LCD_BACKLITE;        // GPIO operation
   \   000034   F2C22A02     BIC.B   #0x8, &0x22a
    157              P3DIR  |=  LCD_BACKLITE;        // Output
   \   000038   F2D22402     BIS.B   #0x8, &0x224
    158              P3OUT  |=  LCD_BACKLITE;        // On [High]
   \   00003C   F2D22202     BIS.B   #0x8, &0x222
    159          
    160              // P3 PIN 4
    161              P3SEL1 &= ~SMCLK_2355;          // SMCLK operation
   \   000040   F2C010002C02 BIC.B   #0x10, &0x22c
    162              P3SEL0 |=  SMCLK_2355;          // SMCLK operation
   \   000046   F2D010002A02 BIS.B   #0x10, &0x22a
    163              P3DIR  |=  SMCLK_2355;          // Direction must be High
   \   00004C   F2D010002402 BIS.B   #0x10, &0x224
    164          
    165              // P3 PIN 5
    166              P3SEL1 &= ~DAC_CNTL;            // GPIO operation
   \   000052   F2C020002C02 BIC.B   #0x20, &0x22c
    167              P3SEL0 &= ~DAC_CNTL;            // GPIO operation
   \   000058   F2C020002A02 BIC.B   #0x20, &0x22a
    168              P3DIR  |=  DAC_CNTL;            // Output
   \   00005E   F2D020002402 BIS.B   #0x20, &0x224
    169              P3OUT  &= ~DAC_CNTL;            // Off [Low]
   \   000064   F2C020002202 BIC.B   #0x20, &0x222
    170          
    171              // P3 PIN 6
    172              P3SEL1 &= ~IOT_LINK_CPU;        // GPIO operation
   \   00006A   F2C040002C02 BIC.B   #0x40, &0x22c
    173              P3SEL0 &= ~IOT_LINK_CPU;        // GPIO operation
   \   000070   F2C040002A02 BIC.B   #0x40, &0x22a
    174              P3DIR  &= ~IOT_LINK_CPU;        // Input
   \   000076   F2C040002402 BIC.B   #0x40, &0x224
    175          
    176              // P3 PIN 7
    177              P3SEL1 &= ~IOT_EN_CPU;          // GPIO opertaion
   \   00007C   F2C080002C02 BIC.B   #0x80, &0x22c
    178              P3SEL0 &= ~IOT_EN_CPU;          // GPIO operation
   \   000082   F2C080002A02 BIC.B   #0x80, &0x22a
    179              P3DIR  |=  IOT_EN_CPU;          // Output
   \   000088   F2D080002402 BIS.B   #0x80, &0x224
    180              P3OUT  &= ~IOT_EN_CPU;          // Off [Low]
   \   00008E   F2C080002202 BIC.B   #0x80, &0x222
    181          }
   \   000094   1001         RETA
   \   000096                REQUIRE _A_PBOUT_L
   \   000096                REQUIRE _A_PBDIR_L
   \   000096                REQUIRE _A_PBSEL1_L
   \   000096                REQUIRE _A_PBSEL0_L
    182          
    183          //------------------------------------------------------------------------------
    184          //
    185          // Description: This function will initialize all pins in port 4
    186          //
    187          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    188          void Init_Port4(void) {
   \                     Init_Port4:
    189              P4OUT = RESET_STATE;            // P4 set Low
   \   000000   C2432302     MOV.B   #0x0, &0x223
    190              P4DIR = RESET_STATE;            // Output
   \   000004   C2432502     MOV.B   #0x0, &0x225
    191          
    192              // P4 PIN 0
    193              P4SEL1 &= ~P4_0;                // GPIO operation
   \   000008   D2C32D02     BIC.B   #0x1, &0x22d
    194              P4SEL0 &= ~P4_0;                // GPIO operation
   \   00000C   D2C32B02     BIC.B   #0x1, &0x22b
    195              P4DIR  &= ~P4_0;                // Input
   \   000010   D2C32502     BIC.B   #0x1, &0x225
    196              
    197              // P4 PIN 1
    198              P4SEL1 &= ~SW1;                 // GPIO operation
   \   000014   E2C32D02     BIC.B   #0x2, &0x22d
    199              P4SEL0 &= ~SW1;                 // GPIO operation
   \   000018   E2C32B02     BIC.B   #0x2, &0x22b
    200              P4OUT  |=  SW1;                 // Configure pullup resistor
   \   00001C   E2D32302     BIS.B   #0x2, &0x223
    201              P4DIR  &= ~SW1;                 // Input
   \   000020   E2C32502     BIC.B   #0x2, &0x225
    202              P4REN  |=  SW1;                 // Enable pullup resistor
   \   000024   E2D32702     BIS.B   #0x2, &0x227
    203              // P4IES |= SW1;                  // P4.2 Hi/Lo edge interrupt
    204              // P4IFG &= ~SW1;                 // Clear all P2.6 interrupt flags
    205              // P4IE |= SW1;                   // P4.2 interrupt enabled
    206              
    207              // P4 PIN 2
    208              P4SEL1 &= ~UCA1TXD;             // UART operation
   \   000028   F2C22D02     BIC.B   #0x8, &0x22d
    209              P4SEL0 |=  UCA1TXD;             // UART operation
   \   00002C   F2D22B02     BIS.B   #0x8, &0x22b
    210              
    211              // P4 PIN 3
    212              P4SEL1 &= ~UCA1RXD;             // UART operation
   \   000030   E2C22D02     BIC.B   #0x4, &0x22d
    213              P4SEL0 |=  UCA1RXD;             // UART operation
   \   000034   E2D22B02     BIS.B   #0x4, &0x22b
    214              
    215              // P4 PIN 4
    216              P4SEL1 &= ~UCB1_CS_LCD;         // GPIO operation
   \   000038   F2C010002D02 BIC.B   #0x10, &0x22d
    217              P4SEL0 &= ~UCB1_CS_LCD;         // GPIO operation
   \   00003E   F2C010002B02 BIC.B   #0x10, &0x22b
    218              P4DIR  |=  UCB1_CS_LCD;         // Output
   \   000044   F2D010002502 BIS.B   #0x10, &0x225
    219              P4OUT  |=  UCB1_CS_LCD;         // Off [High]
   \   00004A   F2D010002302 BIS.B   #0x10, &0x223
    220              
    221              // P4 PIN 5
    222              P4SEL1 &= ~UCB1CLK;             // UCB1CLK SPI BUS operation
   \   000050   F2C020002D02 BIC.B   #0x20, &0x22d
    223              P4SEL0 |=  UCB1CLK;             // UCB1CLK SPI BUS operation
   \   000056   F2D020002B02 BIS.B   #0x20, &0x22b
    224              
    225              // P4 PIN 6
    226              P4SEL1 &= ~UCB1SIMO;            // UCB1SIMO SPI BUS operation
   \   00005C   F2C040002D02 BIC.B   #0x40, &0x22d
    227              P4SEL0 |=  UCB1SIMO;            // UCB1SIMO SPI BUS operation
   \   000062   F2D040002B02 BIS.B   #0x40, &0x22b
    228              
    229              // P4 PIN 7
    230              P4SEL1 &= ~UCB1SOMI;            // UCB1SOMI SPI BUS operation
   \   000068   F2C080002D02 BIC.B   #0x80, &0x22d
    231              P4SEL0 |=  UCB1SOMI;            // UCB1SOMI SPI BUS operation
   \   00006E   F2D080002B02 BIS.B   #0x80, &0x22b
    232          }
   \   000074   1001         RETA
   \   000076                REQUIRE _A_PBOUT_L
   \   000076                REQUIRE _A_PBDIR_L
   \   000076                REQUIRE _A_PBSEL1_L
   \   000076                REQUIRE _A_PBSEL0_L
   \   000076                REQUIRE _A_PBREN_L
    233          
    234          //------------------------------------------------------------------------------
    235          //
    236          // Description: This function will initialize all pins in port 5
    237          //
    238          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    239          void Init_Port5(void) {
   \                     Init_Port5:
    240              P5OUT = RESET_STATE;            // P4 set Low
   \   000000   C2434202     MOV.B   #0x0, &0x242
    241              P5DIR = RESET_STATE;            // Set P4 direction to output
   \   000004   C2434402     MOV.B   #0x0, &0x244
    242          
    243              // P5 PIN 0
    244              P5SEL1 |= CHECK_BAT;            // Analog Function
   \   000008   D2D34C02     BIS.B   #0x1, &0x24c
    245              P5SEL0 |= CHECK_BAT;            // Analog Function
   \   00000C   D2D34A02     BIS.B   #0x1, &0x24a
    246              
    247              // P5 PIN 1
    248              P5SEL1 |= V_BAT;                // Analog Function
   \   000010   E2D34C02     BIS.B   #0x2, &0x24c
    249              P5SEL0 |= V_BAT;                // Analog Function
   \   000014   E2D34A02     BIS.B   #0x2, &0x24a
    250              
    251              // P5 PIN 2
    252              P5SEL1 |=  V_DAC;               // Analog Function
   \   000018   E2D24C02     BIS.B   #0x4, &0x24c
    253              P5SEL0 |=  V_DAC;               // Analog Function
   \   00001C   E2D24A02     BIS.B   #0x4, &0x24a
    254              
    255              // P5 PIN 3
    256              P5SEL1 |=  V_3_3;               // Analog Function
   \   000020   F2D24C02     BIS.B   #0x8, &0x24c
    257              P5SEL0 |=  V_3_3;               // Analog Function
   \   000024   F2D24A02     BIS.B   #0x8, &0x24a
    258              
    259              // P5 PIN 4
    260              P5SEL1 &= ~IOT_BOOT_CPU;        // GPIO operation
   \   000028   F2C010004C02 BIC.B   #0x10, &0x24c
    261              P5SEL0 &= ~IOT_BOOT_CPU;        // GPIO operation
   \   00002E   F2C010004A02 BIC.B   #0x10, &0x24a
    262              P6DIR  |=  IOT_BOOT_CPU;        // Output
   \   000034   F2D010004502 BIS.B   #0x10, &0x245
    263              P4OUT  &= ~IOT_BOOT_CPU;        // Off [Low]
   \   00003A   F2C010002302 BIC.B   #0x10, &0x223
    264          }
   \   000040   1001         RETA
   \   000042                REQUIRE _A_PCOUT_L
   \   000042                REQUIRE _A_PCDIR_L
   \   000042                REQUIRE _A_PCSEL1_L
   \   000042                REQUIRE _A_PCSEL0_L
   \   000042                REQUIRE _A_PBOUT_L
    265          
    266          //------------------------------------------------------------------------------
    267          //
    268          // Description: This function will initialize all pins in port 6
    269          //
    270          //------------------------------------------------------------------------------

   \                                 In  segment CODE, align 2
    271          void Init_Port6(void) {
   \                     Init_Port6:
    272              P6OUT = RESET_STATE;            // P4 set Low
   \   000000   C2434302     MOV.B   #0x0, &0x243
    273              P6DIR = RESET_STATE;            // Set P4 direction to output
   \   000004   C2434502     MOV.B   #0x0, &0x245
    274              
    275              // P6 PIN 0
    276              P6SEL1 &= ~R_FORWARD;           // GPIO operation
   \   000008   D2C34D02     BIC.B   #0x1, &0x24d
    277              P6SEL0 &= ~R_FORWARD;           // GPIO operation
   \   00000C   D2C34B02     BIC.B   #0x1, &0x24b
    278              P6DIR  |=  R_FORWARD;           // Output
   \   000010   D2D34502     BIS.B   #0x1, &0x245
    279              P6OUT  &= ~R_FORWARD;           // Off [Low]
   \   000014   D2C34302     BIC.B   #0x1, &0x243
    280              
    281              // P6 PIN 1
    282              P6SEL1 &= ~L_FORWARD;           // GPIO operation
   \   000018   E2C34D02     BIC.B   #0x2, &0x24d
    283              P6SEL0 &= ~L_FORWARD;           // GPIO operation
   \   00001C   E2C34B02     BIC.B   #0x2, &0x24b
    284              P6DIR  |=  L_FORWARD;           // Output
   \   000020   E2D34502     BIS.B   #0x2, &0x245
    285              P6OUT  &= ~L_FORWARD;           // Off [Low]
   \   000024   E2C34302     BIC.B   #0x2, &0x243
    286          
    287              // P6 PIN 2
    288              P6SEL1 &= ~R_REVERSE;           // GPIO operation
   \   000028   E2C24D02     BIC.B   #0x4, &0x24d
    289              P6SEL0 &= ~R_REVERSE;           // GPIO operation
   \   00002C   E2C24B02     BIC.B   #0x4, &0x24b
    290              P6DIR  |=  R_REVERSE;           // Output
   \   000030   E2D24502     BIS.B   #0x4, &0x245
    291              P6OUT  &= ~R_REVERSE;           // Off [Low]
   \   000034   E2C24302     BIC.B   #0x4, &0x243
    292              
    293              // P6 PIN 3
    294              P6SEL1 &= ~L_REVERSE_2355;      // GPIO operation
   \   000038   F2C24D02     BIC.B   #0x8, &0x24d
    295              P6SEL0 &= ~L_REVERSE_2355;      // GPIO operation
   \   00003C   F2C24B02     BIC.B   #0x8, &0x24b
    296              P6DIR  |=  L_REVERSE_2355;      // Output
   \   000040   F2D24502     BIS.B   #0x8, &0x245
    297              P6OUT  &= ~L_REVERSE_2355;      // Off [Low]
   \   000044   F2C24302     BIC.B   #0x8, &0x243
    298              
    299              // P6 PIN 4
    300              P6SEL1 &= ~IR_SENSOR;           // GPIO operation
   \   000048   F2C010004D02 BIC.B   #0x10, &0x24d
    301              P6SEL0 &= ~IR_SENSOR;           // GPIO operation
   \   00004E   F2C010004B02 BIC.B   #0x10, &0x24b
    302              P6DIR  |=  R_REVERSE;           // Input
   \   000054   E2D24502     BIS.B   #0x4, &0x245
    303              
    304              // P6 PIN 5
    305              P6SEL1 &= ~P6_5;                // GPIO operation
   \   000058   F2C020004D02 BIC.B   #0x20, &0x24d
    306              P6SEL0 &= ~P6_5;                // GPIO operation
   \   00005E   F2C020004B02 BIC.B   #0x20, &0x24b
    307              P6DIR  |=  P6_5;                // Input
   \   000064   F2D020004502 BIS.B   #0x20, &0x245
    308              
    309              // P6 PIN 6
    310              P6SEL1 &= ~GRN_LED;             // GPIO operation
   \   00006A   F2C040004D02 BIC.B   #0x40, &0x24d
    311              P6SEL0 &= ~GRN_LED;             // GPIO operation
   \   000070   F2C040004B02 BIC.B   #0x40, &0x24b
    312              P6DIR  |=  GRN_LED;             // Output
   \   000076   F2D040004502 BIS.B   #0x40, &0x245
    313              P6OUT  |=  GRN_LED;             // Off [High]
   \   00007C   F2D040004302 BIS.B   #0x40, &0x243
    314          }
   \   000082   1001         RETA
   \   000084                REQUIRE _A_PCOUT_L
   \   000084                REQUIRE _A_PCDIR_L
   \   000084                REQUIRE _A_PCSEL1_L
   \   000084                REQUIRE _A_PCSEL0_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_Port5
      4   Init_Port6
      4   Init_Ports
        4   -> Init_Port1
        4   -> Init_Port2
        4   -> Init_Port3
        4   -> Init_Port4
        4   -> Init_Port5
        4   -> Init_Port6


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     104  Init_Port1
     142  Init_Port2
     150  Init_Port3
     118  Init_Port4
      66  Init_Port5
     132  Init_Port6
      30  Init_Ports
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PCDIR_L
       2  _A_PCOUT_L
       2  _A_PCSEL0_L
       2  _A_PCSEL1_L

 
 742 bytes in segment CODE
  28 bytes in segment DATA16_AN
 
 742 bytes of CODE memory
   0 bytes of DATA memory (+ 28 bytes shared)

Errors: none
Warnings: none
