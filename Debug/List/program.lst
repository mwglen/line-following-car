###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          22/Feb/2022  10:00:18
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\program.c
#    Command line  =  
#        -f C:\Users\mwg22\AppData\Local\Temp\EWDDED.tmp
#        (C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\program.c -lC
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\List -o
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I
#        ./ --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\List\program.lst
#    Object file   =  
#        C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\Debug\Obj\program.r43
#
###############################################################################

C:\Users\mwg22\OneDrive\Desktop\ECE306-Project\program.c
      1          #include "primitives.h"
      2          #include "program.h"
      3          #include "msp430.h"
      4          #include "switches.h"
      5          #include "display.h"
      6          #include "wheels.h"
      7          #include <string.h>
      8          
      9          /// Global Variables
     10          // Main Function

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     11          unsigned int STARTUP_TIME = 0;
   \                     STARTUP_TIME:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     12          Event CURR_EVENT = STARTUP;
   \                     CURR_EVENT:
   \   000000                DS8 1

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     13          Event CURR_SELECTION = MAIN_MENU;
   \                     CURR_SELECTION:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for CURR_SELECTION>`
     14          
     15          // Circle

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     16          unsigned int CIR_TIME = 0;
   \                     CIR_TIME:
   \   000000                DS8 2
     17          
     18          // Triangle

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     19          TriangleState TRI_STATE = 0;
                                           ^
Warning[Pe188]: enumerated type mixed with another type
   \                     TRI_STATE:
   \   000000                DS8 1

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     20          unsigned int TRI_TIME = 0;
   \                     TRI_TIME:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     21          unsigned int TRI_NUM = 0;
   \                     TRI_NUM:
   \   000000                DS8 2
     22          
     23          // Figure 8

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     24          Figure8State FIG8_STATE = 0;
                                           ^
Warning[Pe188]: enumerated type mixed with another type
   \                     FIG8_STATE:
   \   000000                DS8 1

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     25          unsigned int FIG8_TIME = 0;
   \                     FIG8_TIME:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     26          unsigned int FIG8_NUM = 0;
   \                     FIG8_NUM:
   \   000000                DS8 2
     27          

   \                                 In  segment DATA16_C, align 2, align-sorted
     28          const unsigned int CIR_ROT_TIME = 3800;
   \                     CIR_ROT_TIME:
   \   000000   D80E         DC16 3800

   \                                 In  segment DATA16_C, align 2, align-sorted
     29          const unsigned int TRI_SIDE_TIME = 300;
   \                     TRI_SIDE_TIME:
   \   000000   2C01         DC16 300

   \                                 In  segment DATA16_C, align 2, align-sorted
     30          const unsigned int TRI_ROT_TIME45 = 150;
   \                     TRI_ROT_TIME45:
   \   000000   9600         DC16 150

   \                                 In  segment DATA16_C, align 2, align-sorted
     31          const unsigned int FIG8_ROT_TIME = 800;
   \                     FIG8_ROT_TIME:
   \   000000   2003         DC16 800
     32          
     33          /// Functions
     34          // start the main program

   \                                 In  segment CODE, align 2
     35          void program_start(void) {
   \                     program_start:
   \   000000   1B15         PUSHM.W #0x2, R11
     36            switch (CURR_EVENT) {
   \   000002   5E42....     MOV.B   &CURR_EVENT, R14
   \   000006   4E83         SUB.B   #0x0, R14
   \   000008   0D24         JEQ     ??program_start_16
   \   00000A   5E83         SUB.B   #0x1, R14
   \   00000C   3124         JEQ     ??program_start_17
   \   00000E   5E83         SUB.B   #0x1, R14
   \   000010   6F25         JEQ     ??program_start_18
   \   000012   5E83         SUB.B   #0x1, R14
   \   000014   7F25         JEQ     ??program_start_19
   \   000016   5E83         SUB.B   #0x1, R14
   \   000018   ....         JNE     $+6
   \   00001A   ........     BRA     #??program_start_20
   \   00001E   5E83         SUB.B   #0x1, R14
   \   000020   ........     BRA     #??program_start_2
     37              case STARTUP:
     38                STARTUP_TIME++;
   \                     ??program_start_16:
   \   000024   9253....     ADD.W   #0x1, &STARTUP_TIME
     39                if (STARTUP_TIME > 400) {
   \   000028   B2909101.... CMP.W   #0x191, &STARTUP_TIME
   \   00002E   1E28         JNC     ??program_start_4
     40                  CURR_EVENT = MAIN_MENU;
   \   000030   D243....     MOV.B   #0x1, &CURR_EVENT
     41                  strcpy(display_line[0], "MAIN  MENU");
   \   000034   3D40....     MOV.W   #`?<Constant "MAIN  MENU">`, R13
   \   000038   3C40....     MOV.W   #display_line, R12
   \   00003C   ........     CALLA   #strcpy
     42                  strcpy(display_line[1], "----------");
   \   000040   3D40....     MOV.W   #`?<Constant "----------">`, R13
   \   000044   3C40....     MOV.W   #display_line + 11, R12
   \   000048   ........     CALLA   #strcpy
     43                  strcpy(display_line[2], "<- RUN    ");
   \   00004C   3D40....     MOV.W   #`?<Constant "<- RUN    ">`, R13
   \   000050   3C40....     MOV.W   #display_line + 22, R12
   \   000054   ........     CALLA   #strcpy
     44                  strcpy(display_line[3], "   NEXT ->");
   \   000058   3D40....     MOV.W   #`?<Constant "   NEXT ->">`, R13
   \   00005C   3C40....     MOV.W   #display_line + 33, R12
   \   000060   ........     CALLA   #strcpy
     45                  display_changed = TRUE; 
   \   000064   D243....     MOV.B   #0x1, &display_changed
     46                  STARTUP_TIME = 0;
   \   000068   8243....     MOV.W   #0x0, &STARTUP_TIME
     47                }
     48                break;
   \                     ??program_start_4:
   \   00006C   ........     BRA     #??program_start_2
     49                
     50              case MAIN_MENU:
     51                set_wheels_dir(0, 0);
   \                     ??program_start_17:
   \   000070   0D43         MOV.W   #0x0, R13
   \   000072   0C43         MOV.W   #0x0, R12
   \   000074   ........     CALLA   #set_wheels_dir
     52                switch (CURR_SELECTION) {
   \   000078   5E42....     MOV.B   &CURR_SELECTION, R14
   \   00007C   5E83         SUB.B   #0x1, R14
   \   00007E   0924         JEQ     ??program_start_21
   \   000080   5E83         SUB.B   #0x1, R14
   \   000082   2B24         JEQ     ??program_start_22
   \   000084   5E83         SUB.B   #0x1, R14
   \   000086   6C24         JEQ     ??program_start_23
   \   000088   5E83         SUB.B   #0x1, R14
   \   00008A   AD24         JEQ     ??program_start_24
   \   00008C   5E83         SUB.B   #0x1, R14
   \   00008E   EE24         JEQ     ??program_start_25
   \   000090   2E3D         JMP     ??program_start_0
     53                  case MAIN_MENU:
     54                    if (get_sw2()) {
   \                     ??program_start_21:
   \   000092   ........     CALLA   #get_sw2
   \   000096   4C93         CMP.B   #0x0, R12
   \   000098   1D24         JEQ     ??program_start_26
     55                      CURR_SELECTION = DRAW_CIRCLE;
   \   00009A   E243....     MOV.B   #0x2, &CURR_SELECTION
     56                      strcpy(display_line[0], "MAIN  MENU");
   \   00009E   3D40....     MOV.W   #`?<Constant "MAIN  MENU">`, R13
   \   0000A2   3C40....     MOV.W   #display_line, R12
   \   0000A6   ........     CALLA   #strcpy
     57                      strcpy(display_line[1], "----------");
   \   0000AA   3D40....     MOV.W   #`?<Constant "----------">`, R13
   \   0000AE   3C40....     MOV.W   #display_line + 11, R12
   \   0000B2   ........     CALLA   #strcpy
     58                      strcpy(display_line[2], "   DRAW   ");
   \   0000B6   3D40....     MOV.W   #`?<Constant "   DRAW   ">`, R13
   \   0000BA   3C40....     MOV.W   #display_line + 22, R12
   \   0000BE   ........     CALLA   #strcpy
     59                      strcpy(display_line[3], "  CIRCLE  ");
   \   0000C2   3D40....     MOV.W   #`?<Constant "  CIRCLE  ">`, R13
   \   0000C6   3C40....     MOV.W   #display_line + 33, R12
   \   0000CA   ........     CALLA   #strcpy
     60                      display_changed = TRUE;  
   \   0000CE   D243....     MOV.B   #0x1, &display_changed
   \   0000D2   F43D         JMP     ??program_start_2
     61                    } else get_sw1();
   \                     ??program_start_26:
   \   0000D4   ........     CALLA   #get_sw1
     62                    break;
   \   0000D8   F13D         JMP     ??program_start_2
     63                    
     64                  case DRAW_CIRCLE:
     65                    if (get_sw2()) {
   \                     ??program_start_22:
   \   0000DA   ........     CALLA   #get_sw2
   \   0000DE   4C93         CMP.B   #0x0, R12
   \   0000E0   1E24         JEQ     ??program_start_27
     66                      CURR_SELECTION = DRAW_TRIANGLE;
   \   0000E2   F2400300.... MOV.B   #0x3, &CURR_SELECTION
     67                      strcpy(display_line[0], "MAIN  MENU");
   \   0000E8   3D40....     MOV.W   #`?<Constant "MAIN  MENU">`, R13
   \   0000EC   3C40....     MOV.W   #display_line, R12
   \   0000F0   ........     CALLA   #strcpy
     68                      strcpy(display_line[1], "----------");
   \   0000F4   3D40....     MOV.W   #`?<Constant "----------">`, R13
   \   0000F8   3C40....     MOV.W   #display_line + 11, R12
   \   0000FC   ........     CALLA   #strcpy
     69                      strcpy(display_line[2], "   DRAW   ");
   \   000100   3D40....     MOV.W   #`?<Constant "   DRAW   ">`, R13
   \   000104   3C40....     MOV.W   #display_line + 22, R12
   \   000108   ........     CALLA   #strcpy
     70                      strcpy(display_line[3], " TRIANGLE ");
   \   00010C   3D40....     MOV.W   #`?<Constant " TRIANGLE ">`, R13
   \   000110   3C40....     MOV.W   #display_line + 33, R12
   \   000114   ........     CALLA   #strcpy
     71                      display_changed = TRUE; 
   \   000118   D243....     MOV.B   #0x1, &display_changed
   \   00011C   CF3D         JMP     ??program_start_2
     72                    } else if (get_sw1()) {
   \                     ??program_start_27:
   \   00011E   ........     CALLA   #get_sw1
   \   000122   4C93         CMP.B   #0x0, R12
   \   000124   CB25         JEQ     ??program_start_2
     73                      CURR_EVENT = DRAW_CIRCLE;
   \   000126   E243....     MOV.B   #0x2, &CURR_EVENT
     74                      strcpy(display_line[0], "          ");
   \   00012A   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   00012E   3C40....     MOV.W   #display_line, R12
   \   000132   ........     CALLA   #strcpy
     75                      strcpy(display_line[1], "  DRAWING ");
   \   000136   3D40....     MOV.W   #`?<Constant "  DRAWING ">`, R13
   \   00013A   3C40....     MOV.W   #display_line + 11, R12
   \   00013E   ........     CALLA   #strcpy
     76                      strcpy(display_line[2], "  CIRCLE  ");
   \   000142   3D40....     MOV.W   #`?<Constant "  CIRCLE  ">`, R13
   \   000146   3C40....     MOV.W   #display_line + 22, R12
   \   00014A   ........     CALLA   #strcpy
     77                      strcpy(display_line[3], "          ");
   \   00014E   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   000152   3C40....     MOV.W   #display_line + 33, R12
   \   000156   ........     CALLA   #strcpy
     78                      display_changed = TRUE;  
   \   00015A   D243....     MOV.B   #0x1, &display_changed
     79                    } break;
   \   00015E   AE3D         JMP     ??program_start_2
     80                    
     81                  case DRAW_TRIANGLE:
     82                    if (get_sw2()) {
   \                     ??program_start_23:
   \   000160   ........     CALLA   #get_sw2
   \   000164   4C93         CMP.B   #0x0, R12
   \   000166   1D24         JEQ     ??program_start_28
     83                      CURR_SELECTION = DRAW_FIGURE8;
   \   000168   E242....     MOV.B   #0x4, &CURR_SELECTION
     84                      strcpy(display_line[0], "MAIN  MENU");
   \   00016C   3D40....     MOV.W   #`?<Constant "MAIN  MENU">`, R13
   \   000170   3C40....     MOV.W   #display_line, R12
   \   000174   ........     CALLA   #strcpy
     85                      strcpy(display_line[1], "----------");
   \   000178   3D40....     MOV.W   #`?<Constant "----------">`, R13
   \   00017C   3C40....     MOV.W   #display_line + 11, R12
   \   000180   ........     CALLA   #strcpy
     86                      strcpy(display_line[2], "   DRAW   ");
   \   000184   3D40....     MOV.W   #`?<Constant "   DRAW   ">`, R13
   \   000188   3C40....     MOV.W   #display_line + 22, R12
   \   00018C   ........     CALLA   #strcpy
     87                      strcpy(display_line[3], " FIGURE 8 ");
   \   000190   3D40....     MOV.W   #`?<Constant " FIGURE 8 ">`, R13
   \   000194   3C40....     MOV.W   #display_line + 33, R12
   \   000198   ........     CALLA   #strcpy
     88                      display_changed = TRUE; 
   \   00019C   D243....     MOV.B   #0x1, &display_changed
   \   0001A0   8D3D         JMP     ??program_start_2
     89                    } else if (get_sw1()) {
   \                     ??program_start_28:
   \   0001A2   ........     CALLA   #get_sw1
   \   0001A6   4C93         CMP.B   #0x0, R12
   \   0001A8   8925         JEQ     ??program_start_2
     90                      CURR_EVENT = DRAW_TRIANGLE;
   \   0001AA   F2400300.... MOV.B   #0x3, &CURR_EVENT
     91                      strcpy(display_line[0], "          ");
   \   0001B0   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   0001B4   3C40....     MOV.W   #display_line, R12
   \   0001B8   ........     CALLA   #strcpy
     92                      strcpy(display_line[1], "  DRAWING ");
   \   0001BC   3D40....     MOV.W   #`?<Constant "  DRAWING ">`, R13
   \   0001C0   3C40....     MOV.W   #display_line + 11, R12
   \   0001C4   ........     CALLA   #strcpy
     93                      strcpy(display_line[2], " TRIANGLE ");
   \   0001C8   3D40....     MOV.W   #`?<Constant " TRIANGLE ">`, R13
   \   0001CC   3C40....     MOV.W   #display_line + 22, R12
   \   0001D0   ........     CALLA   #strcpy
     94                      strcpy(display_line[3], "          ");
   \   0001D4   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   0001D8   3C40....     MOV.W   #display_line + 33, R12
   \   0001DC   ........     CALLA   #strcpy
     95                      display_changed = TRUE; 
   \   0001E0   D243....     MOV.B   #0x1, &display_changed
     96                    } break;
   \   0001E4   6B3D         JMP     ??program_start_2
     97                    
     98                  case DRAW_FIGURE8:
     99                    if (get_sw2()) {
   \                     ??program_start_24:
   \   0001E6   ........     CALLA   #get_sw2
   \   0001EA   4C93         CMP.B   #0x0, R12
   \   0001EC   1E24         JEQ     ??program_start_29
    100                      CURR_SELECTION = PROJECT5;
   \   0001EE   F2400500.... MOV.B   #0x5, &CURR_SELECTION
    101                      strcpy(display_line[0], "MAIN  MENU");
   \   0001F4   3D40....     MOV.W   #`?<Constant "MAIN  MENU">`, R13
   \   0001F8   3C40....     MOV.W   #display_line, R12
   \   0001FC   ........     CALLA   #strcpy
    102                      strcpy(display_line[1], "----------");
   \   000200   3D40....     MOV.W   #`?<Constant "----------">`, R13
   \   000204   3C40....     MOV.W   #display_line + 11, R12
   \   000208   ........     CALLA   #strcpy
    103                      strcpy(display_line[2], "   DRAW   ");
   \   00020C   3D40....     MOV.W   #`?<Constant "   DRAW   ">`, R13
   \   000210   3C40....     MOV.W   #display_line + 22, R12
   \   000214   ........     CALLA   #strcpy
    104                      strcpy(display_line[3], "  CIRCLE  ");
   \   000218   3D40....     MOV.W   #`?<Constant "  CIRCLE  ">`, R13
   \   00021C   3C40....     MOV.W   #display_line + 33, R12
   \   000220   ........     CALLA   #strcpy
    105                      display_changed = TRUE;  
   \   000224   D243....     MOV.B   #0x1, &display_changed
   \   000228   493D         JMP     ??program_start_2
    106                    } else if (get_sw1()) {
   \                     ??program_start_29:
   \   00022A   ........     CALLA   #get_sw1
   \   00022E   4C93         CMP.B   #0x0, R12
   \   000230   4525         JEQ     ??program_start_2
    107                      CURR_EVENT = DRAW_FIGURE8;
   \   000232   E242....     MOV.B   #0x4, &CURR_EVENT
    108                      strcpy(display_line[0], "          ");
   \   000236   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   00023A   3C40....     MOV.W   #display_line, R12
   \   00023E   ........     CALLA   #strcpy
    109                      strcpy(display_line[1], "  DRAWING ");
   \   000242   3D40....     MOV.W   #`?<Constant "  DRAWING ">`, R13
   \   000246   3C40....     MOV.W   #display_line + 11, R12
   \   00024A   ........     CALLA   #strcpy
    110                      strcpy(display_line[2], " FIGURE 8 ");
   \   00024E   3D40....     MOV.W   #`?<Constant " FIGURE 8 ">`, R13
   \   000252   3C40....     MOV.W   #display_line + 22, R12
   \   000256   ........     CALLA   #strcpy
    111                      strcpy(display_line[3], "          ");
   \   00025A   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   00025E   3C40....     MOV.W   #display_line + 33, R12
   \   000262   ........     CALLA   #strcpy
    112                      display_changed = TRUE; 
   \   000266   D243....     MOV.B   #0x1, &display_changed
    113                    } break;
   \   00026A   283D         JMP     ??program_start_2
    114                    
    115                  case PROJECT5:
    116                    if (get_sw2()) {
   \                     ??program_start_25:
   \   00026C   ........     CALLA   #get_sw2
   \   000270   4C93         CMP.B   #0x0, R12
   \   000272   1D24         JEQ     ??program_start_30
    117                      CURR_SELECTION = DRAW_CIRCLE;
   \   000274   E243....     MOV.B   #0x2, &CURR_SELECTION
    118                      strcpy(display_line[0], "MAIN  MENU");
   \   000278   3D40....     MOV.W   #`?<Constant "MAIN  MENU">`, R13
   \   00027C   3C40....     MOV.W   #display_line, R12
   \   000280   ........     CALLA   #strcpy
    119                      strcpy(display_line[1], "----------");
   \   000284   3D40....     MOV.W   #`?<Constant "----------">`, R13
   \   000288   3C40....     MOV.W   #display_line + 11, R12
   \   00028C   ........     CALLA   #strcpy
    120                      strcpy(display_line[2], " COMPLETE ");
   \   000290   3D40....     MOV.W   #`?<Constant " COMPLETE ">`, R13
   \   000294   3C40....     MOV.W   #display_line + 22, R12
   \   000298   ........     CALLA   #strcpy
    121                      strcpy(display_line[3], " PROJECT5 ");
   \   00029C   3D40....     MOV.W   #`?<Constant " PROJECT5 ">`, R13
   \   0002A0   3C40....     MOV.W   #display_line + 33, R12
   \   0002A4   ........     CALLA   #strcpy
    122                      display_changed = TRUE; 
   \   0002A8   D243....     MOV.B   #0x1, &display_changed
   \   0002AC   073D         JMP     ??program_start_2
    123                    } else if (get_sw1()) {
   \                     ??program_start_30:
   \   0002AE   ........     CALLA   #get_sw1
   \   0002B2   4C93         CMP.B   #0x0, R12
   \   0002B4   0325         JEQ     ??program_start_2
    124                      CURR_EVENT = DRAW_CIRCLE;
   \   0002B6   E243....     MOV.B   #0x2, &CURR_EVENT
    125                      strcpy(display_line[0], "          ");
   \   0002BA   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   0002BE   3C40....     MOV.W   #display_line, R12
   \   0002C2   ........     CALLA   #strcpy
    126                      strcpy(display_line[1], "PREFORMING");
   \   0002C6   3D40....     MOV.W   #`?<Constant "PREFORMING">`, R13
   \   0002CA   3C40....     MOV.W   #display_line + 11, R12
   \   0002CE   ........     CALLA   #strcpy
    127                      strcpy(display_line[2], " PROJECT5 ");
   \   0002D2   3D40....     MOV.W   #`?<Constant " PROJECT5 ">`, R13
   \   0002D6   3C40....     MOV.W   #display_line + 22, R12
   \   0002DA   ........     CALLA   #strcpy
    128                      strcpy(display_line[3], "          ");
   \   0002DE   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   0002E2   3C40....     MOV.W   #display_line + 33, R12
   \   0002E6   ........     CALLA   #strcpy
    129                      display_changed = TRUE;  
   \   0002EA   D243....     MOV.B   #0x1, &display_changed
    130                    } break;
    131                } break;
   \                     ??program_start_0:
   \   0002EE   E63C         JMP     ??program_start_2
    132                
    133              case DRAW_CIRCLE:
    134                if (CIR_TIME >= CIR_ROT_TIME) {
   \                     ??program_start_18:
   \   0002F0   9292........ CMP.W   &CIR_ROT_TIME, &CIR_TIME
   \   0002F6   0528         JNC     ??program_start_31
    135                  CIR_TIME = 0;
   \   0002F8   8243....     MOV.W   #0x0, &CIR_TIME
    136                  CURR_EVENT = MAIN_MENU;
   \   0002FC   D243....     MOV.B   #0x1, &CURR_EVENT
   \   000300   DD3C         JMP     ??program_start_2
    137                } else {
    138                  CIR_TIME++;
   \                     ??program_start_31:
   \   000302   9253....     ADD.W   #0x1, &CIR_TIME
    139                  set_wheels_dir(25, 100);
   \   000306   3D406400     MOV.W   #0x64, R13
   \   00030A   3C401900     MOV.W   #0x19, R12
   \   00030E   ........     CALLA   #set_wheels_dir
    140                } break;
   \   000312   D43C         JMP     ??program_start_2
    141                
    142              case DRAW_TRIANGLE:
    143                
    144                switch (TRI_STATE) {
   \                     ??program_start_19:
   \   000314   5E42....     MOV.B   &TRI_STATE, R14
   \   000318   4E83         SUB.B   #0x0, R14
   \   00031A   0B24         JEQ     ??program_start_32
   \   00031C   5E83         SUB.B   #0x1, R14
   \   00031E   1B24         JEQ     ??program_start_33
   \   000320   5E83         SUB.B   #0x1, R14
   \   000322   2C24         JEQ     ??program_start_34
   \   000324   5E83         SUB.B   #0x1, R14
   \   000326   3C24         JEQ     ??program_start_35
   \   000328   5E83         SUB.B   #0x1, R14
   \   00032A   4D24         JEQ     ??program_start_36
   \   00032C   5E83         SUB.B   #0x1, R14
   \   00032E   7E24         JEQ     ??program_start_37
   \   000330   C53C         JMP     ??program_start_2
    145                  case DRAW_SIDE1:
    146                    if (TRI_TIME >= TRI_SIDE_TIME) {
   \                     ??program_start_32:
   \   000332   9292........ CMP.W   &TRI_SIDE_TIME, &TRI_TIME
   \   000338   0528         JNC     ??program_start_38
    147                      TRI_TIME = 0;
   \   00033A   8243....     MOV.W   #0x0, &TRI_TIME
    148                      TRI_STATE++;
   \   00033E   D253....     ADD.B   #0x1, &TRI_STATE
   \   000342   BC3C         JMP     ??program_start_2
    149                    } else {
    150                      TRI_TIME++;
   \                     ??program_start_38:
   \   000344   9253....     ADD.W   #0x1, &TRI_TIME
    151                      set_wheels_dir(50, 50);
   \   000348   3D403200     MOV.W   #0x32, R13
   \   00034C   3C403200     MOV.W   #0x32, R12
   \   000350   ........     CALLA   #set_wheels_dir
    152                    } break;
   \   000354   B33C         JMP     ??program_start_2
    153                    
    154                  case ROTATE1:
    155                    if (TRI_TIME >= TRI_ROT_TIME45*2) {
   \                     ??program_start_33:
   \   000356   1F42....     MOV.W   &TRI_ROT_TIME45, R15
   \   00035A   0F5F         RLA.W   R15
   \   00035C   829F....     CMP.W   R15, &TRI_TIME
   \   000360   0528         JNC     ??program_start_39
    156                      TRI_TIME = 0;
   \   000362   8243....     MOV.W   #0x0, &TRI_TIME
    157                      TRI_STATE++;
   \   000366   D253....     ADD.B   #0x1, &TRI_STATE
   \   00036A   A83C         JMP     ??program_start_2
    158                    } else {
    159                      TRI_TIME++;
   \                     ??program_start_39:
   \   00036C   9253....     ADD.W   #0x1, &TRI_TIME
    160                      set_wheels_dir(100, 0);
   \   000370   0D43         MOV.W   #0x0, R13
   \   000372   3C406400     MOV.W   #0x64, R12
   \   000376   ........     CALLA   #set_wheels_dir
    161                    } break;
   \   00037A   A03C         JMP     ??program_start_2
    162                    
    163                  case DRAW_SIDE2:
    164                    if (TRI_TIME >= TRI_SIDE_TIME) {
   \                     ??program_start_34:
   \   00037C   9292........ CMP.W   &TRI_SIDE_TIME, &TRI_TIME
   \   000382   0528         JNC     ??program_start_40
    165                      TRI_TIME = 0;
   \   000384   8243....     MOV.W   #0x0, &TRI_TIME
    166                      TRI_STATE++;
   \   000388   D253....     ADD.B   #0x1, &TRI_STATE
   \   00038C   973C         JMP     ??program_start_2
    167                    } else {
    168                      TRI_TIME++;
   \                     ??program_start_40:
   \   00038E   9253....     ADD.W   #0x1, &TRI_TIME
    169                      set_wheels_dir(50, 50);
   \   000392   3D403200     MOV.W   #0x32, R13
   \   000396   3C403200     MOV.W   #0x32, R12
   \   00039A   ........     CALLA   #set_wheels_dir
    170                    } break;
   \   00039E   8E3C         JMP     ??program_start_2
    171                    
    172                  case ROTATE2:
    173                    if (TRI_TIME >= TRI_ROT_TIME45*2) { 
   \                     ??program_start_35:
   \   0003A0   1F42....     MOV.W   &TRI_ROT_TIME45, R15
   \   0003A4   0F5F         RLA.W   R15
   \   0003A6   829F....     CMP.W   R15, &TRI_TIME
   \   0003AA   0528         JNC     ??program_start_41
    174                      TRI_TIME = 0;
   \   0003AC   8243....     MOV.W   #0x0, &TRI_TIME
    175                      TRI_STATE++;
   \   0003B0   D253....     ADD.B   #0x1, &TRI_STATE
   \   0003B4   833C         JMP     ??program_start_2
    176                    } else {
    177                      TRI_TIME++;
   \                     ??program_start_41:
   \   0003B6   9253....     ADD.W   #0x1, &TRI_TIME
    178                      set_wheels_dir(100, 0);
   \   0003BA   0D43         MOV.W   #0x0, R13
   \   0003BC   3C406400     MOV.W   #0x64, R12
   \   0003C0   ........     CALLA   #set_wheels_dir
    179                    } break;
   \   0003C4   7B3C         JMP     ??program_start_2
    180                    
    181                  case DRAW_SIDE3:
    182                    if (TRI_TIME >= TRI_SIDE_TIME * 1.414) {
   \                     ??program_start_36:
   \   0003C6   1C42....     MOV.W   &TRI_TIME, R12
   \   0003CA   0D43         MOV.W   #0x0, R13
   \   0003CC   ........     CALLA   #_Cast32uto32f
   \   0003D0   0A4C         MOV.W   R12, R10
   \   0003D2   0B4D         MOV.W   R13, R11
   \   0003D4   1C42....     MOV.W   &TRI_SIDE_TIME, R12
   \   0003D8   0D43         MOV.W   #0x0, R13
   \   0003DA   ........     CALLA   #_Cast32uto32f
   \   0003DE   3E40F4FD     MOV.W   #0xfdf4, R14
   \   0003E2   3F40B43F     MOV.W   #0x3fb4, R15
   \   0003E6   ........     CALLA   #_Mul32f
   \   0003EA   0E4C         MOV.W   R12, R14
   \   0003EC   0F4D         MOV.W   R13, R15
   \   0003EE   0C4A         MOV.W   R10, R12
   \   0003F0   0D4B         MOV.W   R11, R13
   \   0003F2   ........     CALLA   #?FLT_GE
   \   0003F6   1128         JNC     ??program_start_42
    183                      TRI_TIME = 0;
   \   0003F8   8243....     MOV.W   #0x0, &TRI_TIME
    184                      TRI_NUM++;
   \   0003FC   9253....     ADD.W   #0x1, &TRI_NUM
    185                      if (TRI_NUM == 2) {
   \   000400   A293....     CMP.W   #0x2, &TRI_NUM
   \   000404   0720         JNE     ??program_start_43
    186                        TRI_NUM = 0;
   \   000406   8243....     MOV.W   #0x0, &TRI_NUM
    187                        CURR_EVENT = MAIN_MENU;
   \   00040A   D243....     MOV.B   #0x1, &CURR_EVENT
    188                        TRI_STATE = 0;
                                         ^
Warning[Pe188]: enumerated type mixed with another type
   \   00040E   C243....     MOV.B   #0x0, &TRI_STATE
   \   000412   543C         JMP     ??program_start_2
    189                      } else {
    190                        TRI_STATE++;
   \                     ??program_start_43:
   \   000414   D253....     ADD.B   #0x1, &TRI_STATE
   \   000418   513C         JMP     ??program_start_2
    191                      }
    192                    } else {
    193                      TRI_TIME++;
   \                     ??program_start_42:
   \   00041A   9253....     ADD.W   #0x1, &TRI_TIME
    194                      set_wheels_dir(50, 50);
   \   00041E   3D403200     MOV.W   #0x32, R13
   \   000422   3C403200     MOV.W   #0x32, R12
   \   000426   ........     CALLA   #set_wheels_dir
    195                    }
    196                    break;
   \   00042A   483C         JMP     ??program_start_2
    197                    
    198                  case ROTATE3:
    199                    if (TRI_TIME >= TRI_ROT_TIME45 * 3) { 
   \                     ??program_start_37:
   \   00042C   1F42....     MOV.W   &TRI_ROT_TIME45, R15
   \   000430   0B4F         MOV.W   R15, R11
   \   000432                RPT     #0x2
   \   000432   41180B5F     ADDX.W  R15, R11
   \   000436   829B....     CMP.W   R11, &TRI_TIME
   \   00043A   0528         JNC     ??program_start_44
    200                      TRI_TIME = 0;
   \   00043C   8243....     MOV.W   #0x0, &TRI_TIME
    201                      TRI_STATE = 0;
                                       ^
Warning[Pe188]: enumerated type mixed with another type
   \   000440   C243....     MOV.B   #0x0, &TRI_STATE
   \   000444   3B3C         JMP     ??program_start_2
    202                    } else {
    203                      TRI_TIME++;
   \                     ??program_start_44:
   \   000446   9253....     ADD.W   #0x1, &TRI_TIME
    204                      set_wheels_dir(100, 0);
   \   00044A   0D43         MOV.W   #0x0, R13
   \   00044C   3C406400     MOV.W   #0x64, R12
   \   000450   ........     CALLA   #set_wheels_dir
    205                    } break;
    206                    
    207                } break;
   \   000454   333C         JMP     ??program_start_2
    208                    
    209              case DRAW_FIGURE8:
    210                switch (FIG8_STATE) {
   \                     ??program_start_20:
   \   000456   5E42....     MOV.B   &FIG8_STATE, R14
   \   00045A   4E83         SUB.B   #0x0, R14
   \   00045C   0324         JEQ     ??program_start_45
   \   00045E   5E83         SUB.B   #0x1, R14
   \   000460   1324         JEQ     ??program_start_46
   \   000462   2C3C         JMP     ??program_start_2
    211                  case CIRCLE1:
    212                    if (FIG8_TIME >= FIG8_ROT_TIME) {
   \                     ??program_start_45:
   \   000464   9292........ CMP.W   &FIG8_ROT_TIME, &FIG8_TIME
   \   00046A   0528         JNC     ??program_start_47
    213                      FIG8_TIME = 0;
   \   00046C   8243....     MOV.W   #0x0, &FIG8_TIME
    214                      FIG8_STATE++;
   \   000470   D253....     ADD.B   #0x1, &FIG8_STATE
   \   000474   233C         JMP     ??program_start_2
    215                    } else {
    216                      FIG8_TIME++;
   \                     ??program_start_47:
   \   000476   9253....     ADD.W   #0x1, &FIG8_TIME
    217                      set_wheels_dir(10, 100);
   \   00047A   3D406400     MOV.W   #0x64, R13
   \   00047E   3C400A00     MOV.W   #0xa, R12
   \   000482   ........     CALLA   #set_wheels_dir
    218                    } break;
   \   000486   1A3C         JMP     ??program_start_2
    219                    
    220                  case CIRCLE2: 
    221                    if (FIG8_TIME >= FIG8_ROT_TIME) {
   \                     ??program_start_46:
   \   000488   9292........ CMP.W   &FIG8_ROT_TIME, &FIG8_TIME
   \   00048E   0E28         JNC     ??program_start_48
    222                      FIG8_NUM++;
   \   000490   9253....     ADD.W   #0x1, &FIG8_NUM
    223                      FIG8_TIME = 0;
   \   000494   8243....     MOV.W   #0x0, &FIG8_TIME
    224                      FIG8_STATE = 0;
                                        ^
Warning[Pe188]: enumerated type mixed with another type
   \   000498   C243....     MOV.B   #0x0, &FIG8_STATE
    225                      if (FIG8_NUM == 2) {
   \   00049C   A293....     CMP.W   #0x2, &FIG8_NUM
   \   0004A0   0D20         JNE     ??program_start_2
    226                        FIG8_NUM = 0;
   \   0004A2   8243....     MOV.W   #0x0, &FIG8_NUM
    227                        CURR_EVENT = MAIN_MENU;
   \   0004A6   D243....     MOV.B   #0x1, &CURR_EVENT
   \   0004AA   083C         JMP     ??program_start_2
    228                      }
    229                    } else {
    230                      FIG8_TIME++;
   \                     ??program_start_48:
   \   0004AC   9253....     ADD.W   #0x1, &FIG8_TIME
    231                      set_wheels_dir(100, 10);
   \   0004B0   3D400A00     MOV.W   #0xa, R13
   \   0004B4   3C406400     MOV.W   #0x64, R12
   \   0004B8   ........     CALLA   #set_wheels_dir
    232                    } break;
    233                } break;
    234            case PROJECT5:
    235              // Travel forwards 1 sec
    236              // Pause 1 sec
    237              // Travel reverse 2 sec
    238              // Pause 1 sec
    239              // Travel forwards 1 sec
    240              // Pause 1 sec
    241              // Spin CW for 3 secs
    242              // Pause 2 secs
    243              // Spin CCW for 3 secs
    244              // Pause 2 secs
    245              break;
    246            }
    247          }
   \                     ??program_start_2:
   \   0004BC   1A17         POPM.W  #0x2, R11
   \   0004BE   1001         RETA

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for CURR_SELECTION>`:
   \   000000   01           DC8 1

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "MAIN  MENU">`:
   \   000000   4D41494E2020 DC8 "MAIN  MENU"
   \            4D454E5500  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "----------">`:
   \   000000   2D2D2D2D2D2D DC8 "----------"
   \            2D2D2D2D00  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "<- RUN    ">`:
   \   000000   3C2D2052554E DC8 "<- RUN    "
   \            2020202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "   NEXT ->">`:
   \   000000   2020204E4558 DC8 "   NEXT ->"
   \            54202D3E00  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "   DRAW   ">`:
   \   000000   202020445241 DC8 "   DRAW   "
   \            5720202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  CIRCLE  ">`:
   \   000000   202043495243 DC8 "  CIRCLE  "
   \            4C45202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant " TRIANGLE ">`:
   \   000000   20545249414E DC8 " TRIANGLE "
   \            474C452000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "          ">`:
   \   000000   202020202020 DC8 "          "
   \            2020202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  DRAWING ">`:
   \   000000   202044524157 DC8 "  DRAWING "
   \            494E472000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant " FIGURE 8 ">`:
   \   000000   204649475552 DC8 " FIGURE 8 "
   \            4520382000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant " COMPLETE ">`:
   \   000000   20434F4D504C DC8 " COMPLETE "
   \            4554452000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant " PROJECT5 ">`:
   \   000000   2050524F4A45 DC8 " PROJECT5 "
   \            4354352000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "PREFORMING">`:
   \   000000   505245464F52 DC8 "PREFORMING"
   \            4D494E4700  

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      8   program_start
        8   -> get_sw1
        8   -> get_sw2
        8   -> set_wheels_dir
        8   -> strcpy
        8 ?FLT_GE
        8 _Cast32uto32f
        8 _Mul32f


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  ?<Constant "          ">
      11  ?<Constant "   DRAW   ">
      11  ?<Constant "   NEXT ->">
      11  ?<Constant "  CIRCLE  ">
      11  ?<Constant "  DRAWING ">
      11  ?<Constant " COMPLETE ">
      11  ?<Constant " FIGURE 8 ">
      11  ?<Constant " PROJECT5 ">
      11  ?<Constant " TRIANGLE ">
      11  ?<Constant "----------">
      11  ?<Constant "<- RUN    ">
      11  ?<Constant "MAIN  MENU">
      11  ?<Constant "PREFORMING">
       1  ?<Initializer for CURR_SELECTION>
       2  CIR_ROT_TIME
       2  CIR_TIME
       1  CURR_EVENT
       1  CURR_SELECTION
       2  FIG8_NUM
       2  FIG8_ROT_TIME
       1  FIG8_STATE
       2  FIG8_TIME
       2  STARTUP_TIME
       2  TRI_NUM
       2  TRI_ROT_TIME45
       2  TRI_SIDE_TIME
       1  TRI_STATE
       2  TRI_TIME
    1216  program_start

 
 1 216 bytes in segment CODE
   151 bytes in segment DATA16_C
     1 byte  in segment DATA16_I
     1 byte  in segment DATA16_ID
    15 bytes in segment DATA16_Z
 
 1 216 bytes of CODE  memory
   152 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: 5
